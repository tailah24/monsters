{"version":3,"sources":["components/Input-box/input-box.js","components/card/card.component.js","components/card-list/card-list.js","App.js","reportWebVitals.js","index.js"],"names":["InputBox","placeholder","handleChange","type","onChange","className","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGaA,EAAW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACnC,OACI,8BACI,uBAAOC,KAAM,SAASF,YAAgBA,EAC1CG,SAAaF,EACbG,UAAY,cCJPC,G,MAAO,SAACC,GAAD,OAChB,sBAAKF,UAAU,iBAAf,UACI,qBAAKG,IAAI,MAAMC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAClB,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCJbC,G,MAAW,SAAAP,GACpB,OAAO,sBAAKF,UAAY,YAAjB,cACHE,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAFhB,SC2CIM,E,kDAzCb,aAAgB,IAAD,8BACb,gBAcFf,aAAe,SAACgB,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IALF,E,qDASf,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACJ,SAAUa,S,oBAQ1C,WAAU,IAAD,EAEyBC,KAAKN,MAA9BR,EAFA,EAEAA,SAAUK,EAFV,EAEUA,YACXU,EAAkBf,EAASgB,QAAQ,SAAArB,GAAO,OAAKA,EAAQE,KAAKoB,cAAcC,SAASb,EAAYY,kBACrG,OACE,sBAAK3B,UAAU,MAAf,UAEE,0CAEA,cAAC,EAAD,CACAJ,YAAY,iBACZC,aAAgB2B,KAAK3B,eACrB,cAAC,EAAD,CAAUa,SAAYe,W,GAlCZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbbe36f9.chunk.js","sourcesContent":["import React from 'react'\nimport './input.css'\n\nexport const InputBox = ({placeholder, handleChange}) => {\n    return (\n        <div>\n            <input type ='search' placeholder = { placeholder } \n        onChange = { handleChange }\n        className = 'search'\n        />\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport './card.css'\n\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt='img' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)\n","import React from 'react'\nimport {Card} from '../card/card.component.js'\nimport './card-list.css'\n\nexport const CardList = props => {\n    return <div className = 'card-list'> {\n        props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n        ))\n              } </div>\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport {InputBox} from './components/Input-box/input-box.js'\nimport { CardList }from './components/card-list/card-list'\n\nclass App extends Component {\n\n  constructor () {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value}\n      )\n  } \n  \n  render (){\n\n    const {monsters, searchField} = this.state\n    const filteredMonster = monsters.filter( monster =>  monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className='App'>\n\n        <h1>Monsters</h1>\n        \n        <InputBox \n        placeholder='search monster'\n        handleChange = {this.handleChange}/>\n        <CardList monsters = {filteredMonster}  />\n        \n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}